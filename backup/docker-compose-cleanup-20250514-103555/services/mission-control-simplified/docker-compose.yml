
services:
  mission-control:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mission-control
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - PORT=3007
      - SOCIAL_INTEL_HOST=http://social-intelligence
      - SOCIAL_INTEL_PORT=9000
      - PROXY_SERVICE_URL=http://proxy-service:3020
      - ENABLE_PROXY=true
      - PROXY_TRAFFIC_PERCENTAGE=100
    restart: unless-stopped
    volumes:
      - ./public:/app/public
    networks:
      - alfred-network

  proxy-service:
    build:
      context: ./proxy-service
      dockerfile: Dockerfile
    container_name: niche-proxy
    image: niche-proxy:latest
    ports:
      - "3020:3020"
    environment:
      - NODE_ENV=production
      - PORT=3020
      - SOCIAL_INTEL_HOST=http://social-intelligence
      - SOCIAL_INTEL_PORT=9000
      - API_TIMEOUT=5000
      - SIMILARITY_THRESHOLD=0.55
      - DEFAULT_NICHE_COUNT=5
      - WEIGHT_LEVENSHTEIN=0.5
      - WEIGHT_JACCARD=0.3
      - WEIGHT_JARO_WINKLER=0.2
      - CACHE_ENABLED=true
      - CACHE_TTL=3600
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
      - SI_API_KEY=${SI_API_KEY:-}
      - PROXY_ROLLOUT_PERCENT=10
    networks:
      - alfred-network
    depends_on:
      - redis

  redis:
    image: redis:alpine
    container_name: niche-scout-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - alfred-network

  prometheus:
    image: prom/prometheus
    container_name: niche-scout-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./proxy-service/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - alfred-network
    depends_on:
      - alertmanager

  alertmanager:
    image: prom/alertmanager
    container_name: niche-scout-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./proxy-service/alertmanager:/etc/alertmanager
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - alfred-network

networks:
  alfred-network:
    external: true

volumes:
  redis-data:
  prometheus-data:
  alertmanager-data:
