
services:
  alfred-bot:
    image: python:3.11-slim
    working_dir: /app
    command: >
      bash -c "pip install flask werkzeug==2.0.3 slack-sdk redis requests &&
      mkdir -p /app/src &&
      cp /app_host/slack-bot/src/app.py /app/src/ &&
      python -m src.app"
    ports:
      - "8011:8011"
    environment:
      - PORT=8011
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
    volumes:
      - ./:/app_host
    depends_on:
      - redis
      - supabase

  alfred-orchestrator:
    image: node:18-alpine
    working_dir: /app
    command: >
      sh -c "mkdir -p /app/src &&
      cp /app_host/mission-control/src/index.js /app/src/ &&
      npm init -y &&
      npm install express cors &&
      node src/index.js"
    ports:
      - "8012:8012"
    environment:
      - PORT=8012
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    volumes:
      - ./:/app_host
    depends_on:
      - redis
      - supabase

  rag-gateway:
    image: python:3.11-slim
    working_dir: /app
    command: >
      bash -c "pip install flask werkzeug==2.0.3 redis openai requests &&
      mkdir -p /app/src &&
      cp /app_host/rag-gateway/src/app.py /app/src/ &&
      python -m src.app"
    ports:
      - "8013:8013"
    environment:
      - PORT=8013
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
    volumes:
      - ./:/app_host
    depends_on:
      - redis

  whatsapp-adapter:
    image: python:3.11-slim
    working_dir: /app
    command: >
      bash -c "pip install flask werkzeug==2.0.3 redis requests &&
      mkdir -p /app/src &&
      cp /app_host/whatsapp-adapter/src/app.py /app/src/ &&
      python -m src.app"
    ports:
      - "8014:8014"
    environment:
      - PORT=8014
      - REDIS_URL=redis://redis:6379
      - WHATSAPP_API_TOKEN=${WHATSAPP_API_TOKEN}
      - WHATSAPP_PHONE_NUMBER_ID=${WHATSAPP_PHONE_NUMBER_ID}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
    volumes:
      - ./:/app_host
    depends_on:
      - redis

  # Optional Streamlit chat service for local testing
  streamlit-chat:
    image: python:3.11-slim
    working_dir: /app
    command: >
      bash -c "pip install streamlit requests &&
      mkdir -p /app/src &&
      cp /app_host/mission-control/src/streamlit_app.py /app/src/ &&
      streamlit run src/streamlit_app.py"
    ports:
      - "8502:8501"
    environment:
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    volumes:
      - ./:/app_host
    depends_on:
      - redis
      - supabase

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  supabase:
    image: supabase/postgres:15.1.0.117
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - supabase-data:/var/lib/postgresql/data

volumes:
  redis-data:
  supabase-data:
