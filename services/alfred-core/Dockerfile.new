# First stage: Get the healthcheck binary
FROM gcr.io/distroless/static-debian12:nonroot AS healthcheck
WORKDIR /app
COPY --from=ghcr.io/alfred-health/healthcheck:latest /usr/local/bin/healthcheck /usr/local/bin/healthcheck

# Main application stage
FROM python:3.11-slim AS app

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip install --no-cache-dir fastapi uvicorn structlog prometheus_client

# Install healthcheck binary from first stage
COPY --from=healthcheck /usr/local/bin/healthcheck /usr/local/bin/healthcheck

# Set up health check environment variables
ENV HEALTH_CHECK_PORT=8011
ENV HEALTH_CHECK_PATH=/health
ENV HEALTH_CHECK_INTERVAL=30s
ENV METRICS_EXPORTER_PORT=9091

# Set healthcheck command with standard parameters
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD ["/usr/local/bin/healthcheck", \
         "--export-prom", ":${METRICS_EXPORTER_PORT}", \
         "--interval", "${HEALTH_CHECK_INTERVAL}", \
         "--port", "${HEALTH_CHECK_PORT}", \
         "--path", "${HEALTH_CHECK_PATH}"]

COPY ./app /app/app

COPY ./health.json /app/health.json

COPY ./healthcheck.sh /app/healthcheck.sh

COPY ./libs /app/libs

# Copy and prepare the entrypoint script
COPY entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh && \
    chmod +x /app/healthcheck.sh


ENV PYTHONPATH=/app

ENV PYTHONUNBUFFERED=1

EXPOSE 8011

EXPOSE 9091

# Use the entrypoint script to run the application
ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8011"]

# Security: Run as non-root user
USER 1001
