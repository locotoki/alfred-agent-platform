
services:
  # Agent Orchestrator UI
  agent-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agent-orchestrator
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:9000}
      - VITE_SOCIAL_INTEL_URL=${VITE_SOCIAL_INTEL_URL:-http://localhost:9000}
      - NODE_ENV=${NODE_ENV:-production}
    volumes:
      - ./src:/app/src
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - social-intel
    networks:
      - alfred-network

  # Social Intelligence Agent
  social-intel:
    image: ${SOCIAL_INTEL_IMAGE:-localhost/social-intel:latest}
    container_name: social-intel
    ports:
      - "9000:9000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:your-super-secret-password@supabase-db:5432/postgres}
      - REDIS_URL=redis://redis:6379
      - PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - GCP_PROJECT_ID=${GCP_PROJECT_ID:-alfred-agent-platform}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGCHAIN_TRACING_V2=true
      - QDRANT_URL=http://qdrant:6333
    volumes:
      - social-intel-data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - alfred-network

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - alfred-network

  # Vector database for embeddings
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-storage:/qdrant/storage
    networks:
      - alfred-network

  # Message Queue for event-driven architecture
  pubsub-emulator:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    container_name: pubsub-emulator
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085 --project=alfred-agent-platform
    ports:
      - "8085:8085"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/v1/projects/alfred-agent-platform/topics"]
    networks:
      - alfred-network

  # Database (optional - comment out if using existing)
  supabase-db:
    image: supabase/postgres:15.1.0.117
    container_name: supabase-db
    healthcheck:
      test: pg_isready -U postgres -h localhost
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your-super-secret-password}
      POSTGRES_DB: postgres
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token}
      JWT_EXP: 3600
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
    command:
      - postgres
      - -c
      - wal_level=logical
      - -c
      - max_connections=1000
      - -c
      - listen_addresses=*
    networks:
      - alfred-network

volumes:
  supabase-db-data:
  social-intel-data:
  redis-data:
  qdrant-storage:

networks:
  alfred-network:
    name: alfred-network
    driver: bridge
