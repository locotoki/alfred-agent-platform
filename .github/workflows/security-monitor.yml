name: security-monitor
on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:
  pull_request:
    paths:
      - 'docker compose*.yml'
      - '**/Dockerfile*'
      - 'bootstrap/**'

jobs:
  postgres-security-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for hardcoded passwords
        run: |
          echo "Checking for hardcoded PostgreSQL passwords..."

          # Check docker compose files
          if grep -E "POSTGRES_PASSWORD:\s*(postgres|password|123456)" docker compose*.yml; then
            echo "❌ ERROR: Hardcoded password found in docker compose files!"
            echo "Use environment variables: POSTGRES_PASSWORD: \${POSTGRES_PASSWORD:-defaultvalue}"
            exit 1
          fi

          echo "✅ No hardcoded passwords found"

      - name: Verify PostgreSQL hardening
        run: |
          echo "Verifying PostgreSQL security configuration..."

          # Check for required security settings
          REQUIRED_SETTINGS=(
            "scram-sha-256"
            "127.0.0.1:5432"
            "no-new-privileges"
            "cap_drop"
            "Dockerfile.postgres-hardened"
          )

          MISSING=()
          for setting in "${REQUIRED_SETTINGS[@]}"; do
            if ! grep -q "$setting" docker-compose.yml; then
              MISSING+=("$setting")
            fi
          done

          if [ ${#MISSING[@]} -gt 0 ]; then
            echo "❌ Missing security configurations:"
            printf '%s\n' "${MISSING[@]}"
            exit 1
          fi

          echo "✅ All security configurations present"

      - name: Check for vulnerable commands
        run: |
          echo "Checking for vulnerable PostgreSQL commands..."

          # Check for dangerous COPY FROM PROGRAM usage
          if grep -r "COPY.*FROM PROGRAM" --include="*.sql" --include="*.sh" .; then
            echo "❌ WARNING: Found potentially dangerous COPY FROM PROGRAM usage"
            exit 1
          fi

          echo "✅ No vulnerable commands found"

      - name: Scan Docker images for CVEs
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          format: 'table'
